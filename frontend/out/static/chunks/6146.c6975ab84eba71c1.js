(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6146,6514],{86392:function(t,e,n){"use strict";n.r(e),n.d(e,{WalletConnectV1Adapter:function(){return _}});var r=n(4942),o=n(75426),i=n(74131);class a extends o.Z{constructor(t,e){super({cryptoLib:i,connectorOpts:t,pushServerOpts:e})}}var c=a,s=n(95844),l=n(13631);function h(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function d(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?h(Object(n),!0).forEach((function(e){(0,r.Z)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}const p={EIP155:"eip155",SOLANA:"solana"},u=d(d({},p),{},{MULTICHAIN:"multichain"}),m="776218ac4734478c90191dde8cae483c",f=(t,e)=>{const n=e?"number"===typeof e?e:parseInt(e,16):(t=>{if(t===p.EIP155)return 1;if(t===p.SOLANA)return 1;throw new Error("Chain namespace ".concat(t," is not supported"))})(t);return t===p.EIP155?(t=>{const e=p.EIP155;return 1===t?{chainNamespace:e,chainId:"0x1",rpcTarget:"https://mainnet.infura.io/v3/".concat(m),displayName:"Ethereum Mainnet",blockExplorer:"https://etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:3===t?{chainNamespace:e,chainId:"0x3",rpcTarget:"https://ropsten.infura.io/v3/".concat(m),displayName:"ropsten",blockExplorer:"https://ropsten.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:4===t?{chainNamespace:e,chainId:"0x4",rpcTarget:"https://rinkeby.infura.io/v3/".concat(m),displayName:"rinkeby",blockExplorer:"https://rinkeby.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:5===t?{chainNamespace:e,chainId:"0x5",rpcTarget:"https://goerli.infura.io/v3/".concat(m),displayName:"goerli",blockExplorer:"https://goerli.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:42===t?{chainNamespace:e,chainId:"0x2a",rpcTarget:"https://kovan.infura.io/v3/".concat(m),displayName:"kovan",blockExplorer:"https://kovan.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:137===t?{chainNamespace:e,rpcTarget:"https://polygon-rpc.com",blockExplorer:"https://polygonscan.com",chainId:"0x89",displayName:"Polygon Mainnet",ticker:"matic",tickerName:"matic"}:80001===t?{chainNamespace:e,rpcTarget:"https://rpc-mumbai.maticvigil.com",blockExplorer:"https://mumbai-explorer.matic.today",chainId:"0x13881",displayName:"Polygon Mumbai Testnet",ticker:"matic",tickerName:"matic"}:56===t?{chainNamespace:e,rpcTarget:"https://bsc-dataseed.binance.org",blockExplorer:"https://bscscan.com",chainId:"0x38",displayName:"Binance SmartChain Mainnet",ticker:"BNB",tickerName:"BNB"}:97===t?{chainNamespace:e,rpcTarget:"https://data-seed-prebsc-2-s3.binance.org:8545",blockExplorer:"https://testnet.bscscan.com",chainId:"0x61",displayName:"Binance SmartChain Testnet",ticker:"BNB",tickerName:"BNB"}:null})(n):t===p.SOLANA?(t=>{const e=p.SOLANA;return 1===t?{chainNamespace:e,blockExplorer:"https://explorer.solana.com",chainId:"0x1",displayName:"Solana Mainnet",rpcTarget:"https://api.mainnet-beta.solana.com",ticker:"SOL",tickerName:"Solana Token"}:2===t?{rpcTarget:"https://api.testnet.solana.com",blockExplorer:"https://explorer.solana.com?cluster=testnet",chainId:"0x2",chainNamespace:e,displayName:"testnet",ticker:"SOL",tickerName:"solana"}:3===t?{rpcTarget:"https://api.devnet.solana.com",blockExplorer:"https://explorer.solana.com?cluster=devnet",chainId:"0x3",chainNamespace:e,displayName:"devnet",ticker:"SOL",tickerName:"solana"}:null})(n):null};class g extends l.s{constructor(t,e){super(e),(0,r.Z)(this,"code",void 0),(0,r.Z)(this,"message",void 0),this.code=t,this.message=e||"",Object.defineProperty(this,"name",{value:"Web3AuthError"})}toJSON(){return{name:this.name,code:this.code,message:this.message}}toString(){return JSON.stringify(this.toJSON())}}class E extends g{constructor(t,e){super(t,e),Object.defineProperty(this,"name",{value:"WalletInitializationError"})}static fromCode(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new E(t,"".concat(E.messages[t],", ").concat(e))}static notFound(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return E.fromCode(5001,t)}static notInstalled(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return E.fromCode(5002,t)}static notReady(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return E.fromCode(5003,t)}static windowBlocked(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return E.fromCode(5004,t)}static windowClosed(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return E.fromCode(5005,t)}static incompatibleChainNameSpace(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return E.fromCode(5006,t)}static duplicateAdapterError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return E.fromCode(5007,t)}static invalidProviderConfigError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return E.fromCode(5008,t)}static providerNotReadyError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return E.fromCode(5009,t)}static rpcConnectionError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return E.fromCode(5010,t)}static invalidParams(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return E.fromCode(5011,t)}static invalidNetwork(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return E.fromCode(5013,t)}}(0,r.Z)(E,"messages",{5e3:"Custom",5001:"Wallet is not found",5002:"Wallet is not installed",5003:"Wallet is not ready yet",5004:"Wallet window is blocked",5005:"Wallet window has been closed by the user",5006:"Incompatible chain namespace provided",5007:"Adapter has already been included",5008:"Invalid provider Config",5009:"Provider is not ready yet",5010:"Failed to connect with rpc url",5011:"Invalid params passed in",5013:"Invalid network provided"});class y extends g{constructor(t,e){super(t,e),Object.defineProperty(this,"name",{value:"WalletLoginError"})}static fromCode(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new y(t,"".concat(y.messages[t]).concat(e))}static connectionError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return y.fromCode(5111,t)}static disconnectionError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return y.fromCode(5112,t)}static notConnectedError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return y.fromCode(5113,t)}static popupClosed(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return y.fromCode(5114,t)}}function O(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function N(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?O(Object(n),!0).forEach((function(e){(0,r.Z)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):O(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}(0,r.Z)(y,"messages",{5e3:"Custom",5111:"Failed to connect with wallet",5112:"Failed to disconnect from wallet",5113:"Wallet is not connected",5114:"Wallet popup has been closed by the user"});const v={OPENLOGIN:"openlogin",WALLET_CONNECT_V1:"wallet-connect-v1",WALLET_CONNECT_V2:"wallet-connect-v2"},C=N({TORUS_SOLANA:"torus-solana",PHANTOM:"phantom"},v),b=N({TORUS_EVM:"torus-evm",METAMASK:"metamask"},v),w=N(N({},b),C);function P(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function T(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?P(Object(n),!0).forEach((function(e){(0,r.Z)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):P(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}const k="external",I={NOT_READY:"not_ready",READY:"ready",CONNECTING:"connecting",CONNECTED:"connected",DISCONNECTED:"disconnected",ERRORED:"errored"},D=T(T({},I),{},{ADAPTER_DATA_UPDATED:"adapter_data_updated"});class A extends s.Ue{constructor(){super(...arguments),(0,r.Z)(this,"adapterData",{}),(0,r.Z)(this,"chainConfig",null)}get chainConfigProxy(){return this.chainConfig?T({},this.chainConfig):null}setChainConfig(t){if(this.status===I.READY)return;if(!t.chainNamespace)throw E.notReady("ChainNamespace is required while setting chainConfig");const e=f(t.chainNamespace,t.chainId);this.chainConfig=T(T({},e),t)}setAdapterSettings(t){}checkConnectionRequirements(){if(this.name!==w.WALLET_CONNECT_V1||this.status!==I.CONNECTING){if(this.status===I.CONNECTING)throw E.notReady("Already connecting");if(this.status===I.CONNECTED)throw y.connectionError("Already connected");if(this.status!==I.READY)throw y.connectionError("Wallet adapter is not ready yet")}}checkInitializationRequirements(){if(this.status!==I.NOT_READY){if(this.status===I.CONNECTED)throw E.notReady("Already connected");if(this.status===I.READY)throw E.notReady("Adapter is already initialized")}}updateAdapterData(t){this.adapterData=t,this.emit(D.ADAPTER_DATA_UPDATED,{adapterName:this.name,data:t})}}var R=n(91627),j=n(2043),S=n.n(j);function x(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}class _ extends A{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),(0,r.Z)(this,"name",w.WALLET_CONNECT_V1),(0,r.Z)(this,"adapterNamespace",u.EIP155),(0,r.Z)(this,"currentChainNamespace",p.EIP155),(0,r.Z)(this,"type",k),(0,r.Z)(this,"adapterOptions",void 0),(0,r.Z)(this,"status",I.NOT_READY),(0,r.Z)(this,"adapterData",{uri:""}),(0,r.Z)(this,"connector",null),(0,r.Z)(this,"wcProvider",null),(0,r.Z)(this,"rehydrated",!1),this.adapterOptions=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?x(Object(n),!0).forEach((function(e){(0,r.Z)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):x(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},t),this.chainConfig=t.chainConfig||null}get connected(){var t;return!(null===(t=this.connector)||void 0===t||!t.connected)}get provider(){var t;return(null===(t=this.wcProvider)||void 0===t?void 0:t.provider)||null}set provider(t){throw new Error("Not implemented")}async init(){super.checkInitializationRequirements(),this.chainConfig||(this.chainConfig=f(p.EIP155,1)),this.connector=this.getWalletConnectInstance(),this.wcProvider=new R.WalletConnectProvider({config:{chainConfig:this.chainConfig}}),this.emit(D.READY,w.WALLET_CONNECT_V1),this.status=I.READY,this.connector.connected&&(this.rehydrated=!0,await this.onConnectHandler({accounts:this.connector.accounts,chainId:this.connector.chainId.toString()}))}async connect(){if(super.checkConnectionRequirements(),!this.connector)throw E.notReady("Wallet adapter is not ready yet");if(this.connected)return await this.onConnectHandler({accounts:this.connector.accounts,chainId:this.connector.chainId.toString()}),this.provider;var t;this.status!==I.CONNECTING&&(null!==(t=this.adapterOptions.adapterSettings)&&void 0!==t&&t.qrcodeModal&&(this.connector=this.getWalletConnectInstance()),await this.createNewSession(),this.status=I.CONNECTING,this.emit(D.CONNECTING,{adapter:w.WALLET_CONNECT_V1}));return new Promise(((t,e)=>{if(!this.connector)return e(E.notReady("Wallet adapter is not ready yet"));this.connector.on("modal_closed",(async()=>(this.status=I.READY,this.emit(D.READY,w.WALLET_CONNECT_V1),e(new Error("User closed modal")))));try{this.connector.on("connect",(async(e,n)=>(e&&this.emit(D.ERRORED,e),await this.onConnectHandler(n.params[0]),t(this.provider))))}catch(n){S().error("Wallet connect v1 adapter error while connecting",n),this.status=I.READY,this.rehydrated=!0,this.emit(D.ERRORED,n),e(n instanceof g?n:y.connectionError("Failed to login with wallet connect: ".concat((null===n||void 0===n?void 0:n.message)||"")))}}))}async getUserInfo(){if(!this.connected)throw y.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async disconnect(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};const{cleanup:e}=t;if(!this.connector||!this.connected)throw y.notConnectedError("Not connected with wallet");await this.connector.killSession(),this.rehydrated=!1,e?(this.connector=null,this.status=I.NOT_READY,this.wcProvider=null):this.status=I.READY,this.emit(D.DISCONNECTED)}async createNewSession(){var t,e;let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{forceNewSession:!1};if(!this.connector)throw E.notReady("Wallet adapter is not ready yet");if(n.forceNewSession&&this.connector.pending&&await this.connector.killSession(),null===(t=this.adapterOptions)||void 0===t||null===(e=t.adapterSettings)||void 0===e||!e.qrcodeModal)return new Promise(((t,e)=>{var n;if(!this.connector)return e(E.notReady("Wallet adapter is not ready yet"));S().debug("creating new session for web3auth wallet connect"),this.connector.on("display_uri",(async(n,r)=>{var o;if(n)return this.emit(D.ERRORED,y.connectionError("Failed to display wallet connect qr code")),e(n);const i=r.params[0];return this.updateAdapterData({uri:i}),null===(o=this.connector)||void 0===o||o.off("display_uri"),t()})),this.connector.createSession({chainId:parseInt((null===(n=this.chainConfig)||void 0===n?void 0:n.chainId)||"0x1",16)}).catch((t=>(S().error("error while creating new wallet connect session",t),this.emit(D.ERRORED,t),e(t))))}));var r;await this.connector.createSession({chainId:parseInt((null===(r=this.chainConfig)||void 0===r?void 0:r.chainId)||"0x1",16)})}async onConnectHandler(t){if(!this.connector||!this.wcProvider)throw E.notReady("Wallet adapter is not ready yet");if(!this.chainConfig)throw E.invalidParams("Chain config is not set");const{chainId:e}=t;S().debug("connected chainId",e);const n=parseInt(e,"string"!==typeof(r=e)&&"number"!==typeof r||!/^(-)?0x[0-9a-f]*$/i.test(r)?10:16);var r;if(n!==parseInt(this.chainConfig.chainId,16))return await this.createNewSession({forceNewSession:!0}),void this.emit(D.ERRORED,E.fromCode(5e3,"Not connected to correct chainId. Expected: ".concat(this.chainConfig.chainId,", Current: ").concat(n,", Please switch to correct chain from wallet")));await this.wcProvider.setupProvider(this.connector),this.subscribeEvents(this.connector),this.status=I.CONNECTED,this.emit(D.CONNECTED,{adapter:w.WALLET_CONNECT_V1,reconnected:this.rehydrated})}subscribeEvents(t){t.on("session_update",(async t=>{t&&this.emit(D.ERRORED,t)}))}getWalletConnectInstance(){const t=this.adapterOptions.adapterSettings||{};return t.bridge=t.bridge||"https://bridge.walletconnect.org",new c(t)}}},32772:function(){},27790:function(){},88924:function(){}}]);